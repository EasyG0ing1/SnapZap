name: Build Native Images for macOS

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  build-intel:
    runs-on: macos-13
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SDKMAN and GraalVM
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 25.ea.28-graal
          sdk install maven 4.0.0-rc-4
          java -version
          mvn -version
          
      - name: Prepare Intel Build Directory
        run: mkdir -p target/Intel

      - name: Build Intel native image
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          mvn clean -PnativeIntel native:compile
          mv target/Intel/* snapzap
          chmod +x snapzap

      - name: Get version from binary
        id: get_version
        run: |
          VERSION=$(./snapzap --version | awk '{print $NF}')
          if [ -z "$VERSION" ]; then
            VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Package Intel archives
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          tar -czf snapzap-${VERSION}-macos-x64.tar.gz snapzap
          zip -j snapzap-${VERSION}-macos-x64.zip snapzap

      - name: Compute Intel hashes
        id: intel_hashes
        run: |
          echo "TAR=$(shasum -a 256 snapzap-${{ steps.get_version.outputs.version }}-macos-x64.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "ZIP=$(shasum -a 256 snapzap-${{ steps.get_version.outputs.version }}-macos-x64.zip | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Upload Intel artifacts for next job
        uses: actions/upload-artifact@v4
        with:
          name: intel-build
          path: |
            snapzap-${{ steps.get_version.outputs.version }}-macos-x64.tar.gz
            snapzap-${{ steps.get_version.outputs.version }}-macos-x64.zip
          retention-days: 1

  build-arm:
    needs: build-intel
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SDKMAN and GraalVM
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 25.ea.28-graal
          sdk install maven 4.0.0-rc-4
          java -version
          mvn -version

      - name: Prepare ARM Build Directory
        run: mkdir -p target/ARM

      - name: Build ARM native image
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          mvn clean -PnativeARM native:compile
          mv target/ARM/* snapzap
          chmod +x snapzap

      - name: Package ARM archives
        run: |
          VERSION=${{ needs.build-intel.outputs.version }}
          tar -czf snapzap-${VERSION}-macos-arm64.tar.gz snapzap
          zip -j snapzap-${VERSION}-macos-arm64.zip snapzap

      - name: Compute ARM hashes
        id: arm_hashes
        run: |
          echo "TAR=$(shasum -a 256 snapzap-${{ needs.build-intel.outputs.version }}-macos-arm64.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "ZIP=$(shasum -a 256 snapzap-${{ needs.build-intel.outputs.version }}-macos-arm64.zip | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Download Intel artifacts
        uses: actions/download-artifact@v4
        with:
          name: intel-build
          path: .

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build-intel.outputs.version }}
          name: Version ${{ needs.build-intel.outputs.version }}
          body: |
            These native binaries were compiled with Github Actions, not my personal computer.

            #Installation Instructions

            ###Option 1 - Manual
            Download the zip file below for your architecture, then unzip the file into a folder that is in your PATH, such as `~/.local/bin`

            ###Option 2 - Homebrew

            ```BASH
            brew update
            brew tap EasyG0ing1/tools
            brew install snapzap
            ```

            The Homebrew option automatically determines which architecture you're running on and installs the correct native binary.

            SHA-256 for each file:

            ```BASH
            snapzap-${{ needs.build-intel.outputs.version }}-macos-arm64.tar.gz : ${{ steps.arm_hashes.outputs.TAR }}
            snapzap-${{ needs.build-intel.outputs.version }}-macos-x64.tar.gz  : ${{ needs.build-intel.outputs.TAR }}
            snapzap-${{ needs.build-intel.outputs.version }}-macos-arm64.zip   : ${{ steps.arm_hashes.outputs.ZIP }}
            snapzap-${{ needs.build-intel.outputs.version }}-macos-x64.zip     : ${{ needs.build-intel.outputs.ZIP }}
            ```
          files: |
                      snapzap-${{ needs.build-intel.outputs.version }}-macos-x64.tar.gz
                      snapzap-${{ needs.build-intel.outputs.version }}-macos-x64.zip
                      snapzap-${{ needs.build-intel.outputs.version }}-macos-arm64.tar.gz
                      snapzap-${{ needs.build-intel.outputs.version }}-macos-arm64.zip
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        