name: Build Intel Native Image for macOS

permissions:
  contents: write

on:
  push:
    branches:
      - master
    paths:
      - 'pom.xml'

jobs:
  build-intel:
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if version changed
        id: version_check
        run: |
          CURRENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)

          # Fetch minimal history to get previous pom.xml
          git fetch origin master --depth=2
          git show HEAD^:pom.xml > pom_old.xml || true
          PREVIOUS_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom_old.xml || echo "")

          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"

          # Always set version
          echo "version=$CURRENT_VERSION" >> $GITHUB_ENV

          if [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "changed=false" >> $GITHUB_ENV
            echo "No version change detected — skipping build."
          else
            echo "changed=true" >> $GITHUB_ENV
          fi
          
      - name: Install SDKMAN and GraalVM
        if: env.changed == 'true'
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 25.ea.28-graal
          sdk use java 25.ea.28-graal
          sdk install maven 4.0.0-rc-4
          sdk use maven 4.0.0-rc-4
          java -version
          mvn -version

      - name: Clean Maven
        if: env.changed == 'true'
        run: mvn clean

      - name: Prepare Intel Build Directory
        if: env.changed == 'true'
        run: mkdir -p target/Intel

      - name: Build Intel native image
        if: env.changed == 'true'
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          mvn -PnativeIntel native:compile
          mv target/Intel/* snapzap
          chmod +x snapzap
          
      - name: Package x86 Artifact Into Zip and Tarball
        if: env.changed == 'true'
        run: |
          mv target/Intel/SnapZap target/Intel/snapzap
          tar -czvf snapzap-${version}-macos-x64.tar.gz -C target/Intel snapzap
          zip -j snapzap-${version}-macos-x64.zip target/Intel/snapzap

      - name: Upload to GitHub Release
        if: env.changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          name: Version ${{ env.version }}
          files: |
            snapzap-${{ env.version }}-macos-x64.tar.gz
            snapzap-${{ env.version }}-macos-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        if: env.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: `${process.env.version}`
            });

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              draft: false,
              prerelease: false
            });
            
      - name: Download ARM artifact
        if: env.changed == 'true'
        run: |
          VERSION="${{ env.version }}"
          echo "Version is $VERSION"
          curl -sSL -f -o arm.tar.gz \
            "https://github.com/EasyG0ing1/SnapZap/releases/download/${VERSION}/snapzap-${VERSION}-macos-arm64.tar.gz"

      - name: Download Intel artifact
        if: env.changed == 'true'
        run: |
          VERSION="${{ env.version }}"
          curl -sSL -f -o intel.tar.gz \
            "https://github.com/EasyG0ing1/SnapZap/releases/download/${VERSION}/snapzap-${VERSION}-macos-x64.tar.gz"
          
      - name: Verify artifacts exist
        if: env.changed == 'true'
        run: |
          if [ ! -s arm.tar.gz ]; then
            echo "❌ ARM artifact is missing or empty"
            exit 1
          fi
          if [ ! -s intel.tar.gz ]; then
            echo "❌ Intel artifact is missing or empty"
            exit 1
          fi
          echo "✅ Both artifacts found"

      - name: Calculate SHA256 checksums
        if: env.changed == 'true'
        run: |
          ARM_SHA=$(shasum -a 256 arm.tar.gz | awk '{print $1}')
          INTEL_SHA=$(shasum -a 256 intel.tar.gz | awk '{print $1}')
          echo "ARM_SHA=$ARM_SHA" >> $GITHUB_ENV
          echo "INTEL_SHA=$INTEL_SHA" >> $GITHUB_ENV

      - name: Update Formula File
        if: env.changed == 'true'
        run: |
          java -jar tools/GenBrewRuby.jar \
          --NewVersion ${{ env.version }} \
          --ARMSHA ${{ env.ARM_SHA }} \
          --x86SHA ${{ env.INTEL_SHA }}
          
      - name: Check out tap repository
        if: env.changed == 'true'
        run: |
          git clone https://x-access-token:${{ secrets.HOMEBREW_TAP_TOKEN }}@github.com/EasyG0ing1/homebrew-tools.git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Replace Ruby File
        if: env.changed == 'true'
        run: |
          cp snapzap.rb homebrew-tools/Formula/snapzap.rb
          cd homebrew-tools
          
      - name: Commit and push changes
        if: env.changed == 'true'
        working-directory: homebrew-tools
        run: |
          if ! git diff --quiet; then
            git add Formula/snapzap.rb
            git commit -m "Bump snapzap to ${{ env.version }}"
            git push
          else
            echo "No changes to commit."
          fi
