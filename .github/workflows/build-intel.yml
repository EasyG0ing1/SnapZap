name: Build Intel Native Image for macOS

permissions:
  contents: write

on:
  push:
    branches:
      - master
    paths:
      - 'pom.xml'

jobs:
  build-intel:
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if version changed
        id: version_check
        run: |
          CURRENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)

          # Fetch minimal history to get previous pom.xml
          git fetch origin master --depth=2
          git show HEAD^:pom.xml > pom_old.xml || true
          PREVIOUS_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom_old.xml || echo "")

          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"

          # Always set version
          echo "version=$CURRENT_VERSION" >> $GITHUB_ENV

          if [ "$CURRENT_VERSION" = "$PREVIOUS_VERSION" ]; then
            echo "changed=false" >> $GITHUB_ENV
            echo "No version change detected â€” skipping build."
          else
            echo "changed=true" >> $GITHUB_ENV
          fi
          
      - name: Create Git tag for version
        if: env.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f v${version}
          git push origin v${version} --force

      - name: Install SDKMAN and GraalVM
        if: env.changed == 'true'
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 25.ea.28-graal
          sdk install maven 4.0.0-rc-4
          java -version
          mvn -version

      - name: Clean Maven
        if: env.changed == 'true'
        run: mvn clean

      - name: Prepare Intel Build Directory
        if: env.changed == 'true'
        run: mkdir -p target/Intel

      - name: Build Intel native image
        if: env.changed == 'true'
        run: |
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          mvn -PnativeIntel native:compile
          mv target/Intel/* snapzap
          chmod +x snapzap

      - name: Package Intel archives
        if: env.changed == 'true'
        run: |
          tar -czf snapzap-${version}-macos-x64.tar.gz snapzap
          zip -j snapzap-${version}-macos-x64.zip snapzap

      - name: Upload to GitHub Release
        if: env.changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: Version ${{ env.version }}
          files: |
            snapzap-${{ env.version }}-macos-x64.tar.gz
            snapzap-${{ env.version }}-macos-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        if: env.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: `v${process.env.version}`
            });

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              draft: false,
              prerelease: false
            });

      - name: Trigger Homebrew Update
        if: env.changed == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update-homebrew.yml
          repo: EasyG0ing1/SnapZap
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          ref: master
          inputs: |
            version=${{ env.version }}
