name: macOS ARM64 native image

on:
  push:
    tags: [ 'v*' ]   # build & publish when you push a tag like v1.0.1
  workflow_dispatch: # allow manual runs from the Actions tab

jobs:
  build-arm64:
    runs-on: macos-14   # Apple‑silicon runner
    permissions:
      contents: write   # required to attach assets to a release

    steps:
      - uses: actions/checkout@v4

      - name: Set up GraalVM (ARM64)
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: graalvm
          java-version: '25-ea'     # matches your pom (Java 25); use '24' if you prefer stable
          components: 'native-image' # installs the native-image tool
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native image (Maven profile 'native')
        run: mvn -Pnative -B -ntp -DskipTests native:compile

      - name: Package artifacts and checksums
        id: pkg
        shell: bash
        run: |
          set -euo pipefail
          
          VER=$(mvn -q -Dexpression=project.version help:evaluate -DforceStdout)
          echo "ver=$VER" >> $GITHUB_OUTPUT
          
          # Try common output paths from GraalVM Native Build Tools / Quarkus / Micronaut / plain native-image
          BIN_PATH=$(
            find target -type f -perm -111 \( -name 'snapzap' -o -name 'SnapZap' -o -name '*-runner' -o -name '*native*' \) \
              2>/dev/null | head -n1
          )
          
          if [[ -z "${BIN_PATH:-}" ]]; then
            echo "❌ Could not locate native binary under target/. Contents:"
            ls -R target || true
            exit 1
          fi
          
          echo "Found native binary at: $BIN_PATH"
          mkdir -p dist
          cp "$BIN_PATH" dist/snapzap   # normalize name for Homebrew
          
          cd dist
          TARBALL="snapzap-${VER}-macos-arm64.tar.gz"
          ZIPBALL="snapzap-${VER}-macos-arm64.zip"
          
          # tar.gz (for Homebrew)
          tar -czf "$TARBALL" snapzap
          shasum -a 256 "$TARBALL" | tee "../${TARBALL}.sha256"
          
          # zip (for manual installs; preserves macOS attrs)
          ditto -c -k --sequesterRsrc --keepParent snapzap "$ZIPBALL"
          shasum -a 256 "$ZIPBALL" | tee "../${ZIPBALL}.sha256"
      
      
      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snapzap-macos-arm64
          path: |
            native-image/snapzap-*-macos-arm64.tar.gz
            native-image/snapzap-*-macos-arm64.zip
            snapzap-*-macos-arm64.tar.gz.sha256
            snapzap-*-macos-arm64.zip.sha256
        
        
      - name: Attach to GitHub Release (on tag or manual)
        if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            native-image/snapzap-*-macos-arm64.tar.gz
            native-image/snapzap-*-macos-arm64.zip
            snapzap-*-macos-arm64.tar.gz.sha256
            snapzap-*-macos-arm64.zip.sha256
          prerelease: false
  
